Index: app/src/main/java/com/example/nh_care/activity/login/LoginActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.nh_care.activity.login\r\n\r\nimport android.os.Bundle\r\nimport android.widget.Toast\r\nimport android.content.Intent\r\nimport android.util.Log\r\nimport android.widget.Button\r\nimport android.widget.EditText\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.android.volley.Request\r\nimport com.android.volley.RequestQueue\r\nimport com.android.volley.toolbox.StringRequest\r\nimport com.android.volley.toolbox.Volley\r\nimport com.example.nh_care.R\r\nimport com.example.nh_care.activity.MainActivity\r\nimport com.example.nh_care.activity.register.RegisterActivity\r\nimport com.example.nh_care.databinding.ActivityLoginBinding\r\nimport com.example.nh_care.database.DbContract\r\nimport com.example.nh_care.ui.beranda.BerandaFragment\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.GlobalScope\r\nimport kotlinx.coroutines.launch\r\n\r\nclass LoginActivity : AppCompatActivity() {\r\n    private lateinit var InputEmail: EditText\r\n    private lateinit var InputPass: EditText\r\n    private lateinit var loginButton: Button\r\n\r\n    private lateinit var binding: ActivityLoginBinding\r\n    private val etUsername: EditText by lazy { binding.etEmail }\r\n    private val etPassword: EditText by lazy { binding.etKataSandi }\r\n        override fun onCreate(savedInstanceState: Bundle?) {\r\n            super.onCreate(savedInstanceState)\r\n            binding = ActivityLoginBinding.inflate(layoutInflater)\r\n            setContentView(binding.root)\r\n            supportActionBar?.hide()\r\n\r\n            binding.tombolMasuk.setOnClickListener {\r\n                val username = etUsername.text.toString()\r\n                val password = etPassword.text.toString()\r\n\r\n                if (!(username.isEmpty() || password.isEmpty())) {\r\n                    loginUser(username, password)\r\n                } else {\r\n                    Toast.makeText(applicationContext, \"Fields cannot be empty\", Toast.LENGTH_SHORT).show()\r\n                }\r\n            }\r\n            binding.daftarakun.setOnClickListener() {\r\n                startActivity(Intent(this, RegisterActivity::class.java))\r\n            }\r\n        }\r\n\r\n        private fun loginUser(email: String, password: String) {\r\n            val requestQueue: RequestQueue = Volley.newRequestQueue(applicationContext)\r\n\r\n            val stringRequest = StringRequest(\r\n                Request.Method.GET,\r\n                \"${DbContract.urlLogin}?email=$email&password=$password\",\r\n                { response ->\r\n                    Log.d(\"LoginActivity\", \"Server Response: $response\")\r\n                    if (response == \"welcome\") {\r\n                        Log.d(\"LoginActivity\", \"Login Successful\")\r\n                        Toast.makeText(applicationContext, \"Login successful\", Toast.LENGTH_SHORT).show()\r\n                        startActivity(Intent(applicationContext, MainActivity::class.java))\r\n                    } else {\r\n                        Log.d(\"LoginActivity\", \"Login Failed\")\r\n                        Toast.makeText(applicationContext, \"Login failed\", Toast.LENGTH_SHORT).show()\r\n                    }\r\n                },\r\n                { error ->\r\n                    Log.e(\"LoginActivity\", \"Volley Error: ${error.message}\")\r\n                    Toast.makeText(\r\n                        applicationContext,\r\n                        \"Login Failed: ${error.message}\",\r\n                        Toast.LENGTH_SHORT\r\n                    ).show()\r\n                }\r\n            )\r\n            requestQueue.add(stringRequest)\r\n        }\r\n\r\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/nh_care/activity/login/LoginActivity.kt b/app/src/main/java/com/example/nh_care/activity/login/LoginActivity.kt
--- a/app/src/main/java/com/example/nh_care/activity/login/LoginActivity.kt	(revision 4ecb235596b5e6087dcc01df36193f51e0cb4f30)
+++ b/app/src/main/java/com/example/nh_care/activity/login/LoginActivity.kt	(date 1701012207871)
@@ -3,80 +3,70 @@
 import android.os.Bundle
 import android.widget.Toast
 import android.content.Intent
+import android.content.SharedPreferences
 import android.util.Log
-import android.widget.Button
-import android.widget.EditText
-import androidx.appcompat.app.AppCompatActivity
+import androidx.activity.ComponentActivity
 import com.android.volley.Request
 import com.android.volley.RequestQueue
 import com.android.volley.toolbox.StringRequest
 import com.android.volley.toolbox.Volley
-import com.example.nh_care.R
 import com.example.nh_care.activity.MainActivity
 import com.example.nh_care.activity.register.RegisterActivity
 import com.example.nh_care.databinding.ActivityLoginBinding
-import com.example.nh_care.database.DbContract
-import com.example.nh_care.ui.beranda.BerandaFragment
-import kotlinx.coroutines.Dispatchers
-import kotlinx.coroutines.GlobalScope
-import kotlinx.coroutines.launch
+import org.json.JSONException
+import org.json.JSONObject
+import java.net.URLEncoder
 
-class LoginActivity : AppCompatActivity() {
-    private lateinit var InputEmail: EditText
-    private lateinit var InputPass: EditText
-    private lateinit var loginButton: Button
-
+class LoginActivity : ComponentActivity() {
     private lateinit var binding: ActivityLoginBinding
-    private val etUsername: EditText by lazy { binding.etEmail }
-    private val etPassword: EditText by lazy { binding.etKataSandi }
-        override fun onCreate(savedInstanceState: Bundle?) {
-            super.onCreate(savedInstanceState)
-            binding = ActivityLoginBinding.inflate(layoutInflater)
-            setContentView(binding.root)
-            supportActionBar?.hide()
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        binding = ActivityLoginBinding.inflate(layoutInflater)
+        setContentView(binding.root)
+
+        binding.daftarakun.setOnClickListener {
+            val intent = Intent(this, RegisterActivity::class.java)
+            startActivity(intent)
+        }
+
+        val url = "http://192.168.1.70/api-mysql-main/api-login.php"
 
-            binding.tombolMasuk.setOnClickListener {
-                val username = etUsername.text.toString()
-                val password = etPassword.text.toString()
-
-                if (!(username.isEmpty() || password.isEmpty())) {
-                    loginUser(username, password)
-                } else {
-                    Toast.makeText(applicationContext, "Fields cannot be empty", Toast.LENGTH_SHORT).show()
-                }
-            }
-            binding.daftarakun.setOnClickListener() {
-                startActivity(Intent(this, RegisterActivity::class.java))
-            }
-        }
-
-        private fun loginUser(email: String, password: String) {
-            val requestQueue: RequestQueue = Volley.newRequestQueue(applicationContext)
+        binding.tombolMasuk.setOnClickListener {
+            val request: RequestQueue = Volley.newRequestQueue(applicationContext)
 
             val stringRequest = StringRequest(
                 Request.Method.GET,
-                "${DbContract.urlLogin}?email=$email&password=$password",
+                "$url?email=${URLEncoder.encode(binding.etEmail.text.toString(), "UTF-8")}&password=${URLEncoder.encode(binding.etKataSandi.text.toString(), "UTF-8")}",
                 { response ->
-                    Log.d("LoginActivity", "Server Response: $response")
-                    if (response == "welcome") {
-                        Log.d("LoginActivity", "Login Successful")
-                        Toast.makeText(applicationContext, "Login successful", Toast.LENGTH_SHORT).show()
-                        startActivity(Intent(applicationContext, MainActivity::class.java))
-                    } else {
-                        Log.d("LoginActivity", "Login Failed")
-                        Toast.makeText(applicationContext, "Login failed", Toast.LENGTH_SHORT).show()
+                    try {
+                        val jsonResponse = JSONObject(response)
+                        val status = jsonResponse.getString("status")
+                        if (status == "success") {
+                            val idDonatur = jsonResponse.getString("id_donatur")
+                            saveID(idDonatur)
+
+                            val intent = Intent(this, MainActivity::class.java)
+                            startActivity(intent)
+                        } else {
+                            Toast.makeText(applicationContext, "Gagal login", Toast.LENGTH_LONG).show()
+                        }
+                    } catch (e: JSONException) {
+                        Log.e("JSONError", "Error parsing JSON", e)
                     }
                 },
                 { error ->
-                    Log.e("LoginActivity", "Volley Error: ${error.message}")
-                    Toast.makeText(
-                        applicationContext,
-                        "Login Failed: ${error.message}",
-                        Toast.LENGTH_SHORT
-                    ).show()
+                    Log.d("errorApp", error.toString())
                 }
             )
-            requestQueue.add(stringRequest)
+            request.add(stringRequest)
         }
+    }
 
-    }
\ No newline at end of file
+    private fun saveID(idDonatur: String) {
+        val preferences: SharedPreferences = getSharedPreferences("donatur_prefs", MODE_PRIVATE)
+        val editor: SharedPreferences.Editor = preferences.edit()
+        editor.putString("id_donatur", idDonatur)
+        editor.apply()
+    }
+}
Index: app/src/main/java/com/example/nh_care/activity/alokasi/AlokasiActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.nh_care.activity.alokasi\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.appcompat.widget.SearchView\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.example.berandaberanda.activitity.alokasi.AlokasiAdapter\r\nimport com.example.berandaberanda.activitity.alokasi.DataItem\r\nimport com.example.nh_care.activity.MainActivity\r\nimport com.example.nh_care.R\r\nimport com.example.nh_care.ui.beranda.BerandaFragment\r\nimport com.example.nh_care.databinding.ActivityAlokasiBinding\r\n\r\nclass AlokasiActivity : AppCompatActivity() {\r\n\r\n    private lateinit var binding: ActivityAlokasiBinding\r\n    private lateinit var mList: ArrayList<DataItem>\r\n    private lateinit var searchView: SearchView\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityAlokasiBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n        supportActionBar?.hide()\r\n\r\n        binding.recyclerView.setHasFixedSize(true)\r\n        binding.recyclerView.layoutManager = LinearLayoutManager(this)\r\n\r\n        mList = ArrayList()\r\n        prepareData()\r\n\r\n        val adapter = AlokasiAdapter(mList)\r\n        binding.recyclerView.adapter = adapter\r\n\r\n\r\n    }\r\n\r\n    private fun prepareData() {\r\n\r\n        mList.add(\r\n            DataItem(\r\n                \"Pembangunan dan Fasilitas\",\r\n                \"Alokasi dana untuk pembangunan fasilitas panti asuhan adalah upaya menyediakan dana guna membangun atau meningkatkan infrastruktur panti asuhan. Dana ini digunakan untuk memperbaiki, membangun, atau memperluas fasilitas seperti ruang tidur, kamar mandi, ruang belajar, dan area rekreasi. Sasaran alokasi dana ini adalah menciptakan lingkungan yang nyaman dan aman bagi anak-anak di panti asuhan, memastikan mereka memiliki tempat yang layak untuk tinggal dan belajar.\",\r\n                R.drawable.beranda,\r\n                null\r\n            )\r\n        )\r\n        mList.add(\r\n            DataItem(\r\n                \"Santunan Anak Yatim dan Piatu\",\r\n                \"Alokasi dana untuk santunan anak yatim piatu berfokus pada memberikan dukungan finansial langsung kepada anak-anak yang tinggal di panti asuhan. Dana ini digunakan untuk memenuhi kebutuhan dasar seperti pendidikan, pangan, pakaian, dan kebutuhan keseharian lainnya. Sasaran alokasi dana ini adalah memberikan bantuan praktis dan nyata kepada anak-anak yatim piatu, memastikan bahwa mereka mendapatkan dukungan untuk menghadapi kehidupan sehari-hari dan memiliki akses ke fasilitas yang mendukung perkembangan mereka secara holistik.\",\r\n                R.drawable.beranda,\r\n                null\r\n            )\r\n        )\r\n\r\n        mList.add(\r\n            DataItem(\r\n                \"Coming Soon\",\r\n                null,\r\n                null,\r\n                R.drawable.comingsoon\r\n            )\r\n        )\r\n\r\n        mList.add(\r\n            DataItem(\r\n                \"Coming Soon\",\r\n                null,\r\n                null,\r\n                R.drawable.comingsoon\r\n            )\r\n        )\r\n\r\n\r\n        mList.add(\r\n            DataItem(\r\n                \"Administrator\",\r\n                null,\r\n                null,\r\n                null\r\n            )\r\n        )\r\n\r\n        binding.backalokasi.setOnClickListener() {\r\n            startActivity(Intent(this, MainActivity::class.java))\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/nh_care/activity/alokasi/AlokasiActivity.kt b/app/src/main/java/com/example/nh_care/activity/alokasi/AlokasiActivity.kt
--- a/app/src/main/java/com/example/nh_care/activity/alokasi/AlokasiActivity.kt	(revision 4ecb235596b5e6087dcc01df36193f51e0cb4f30)
+++ b/app/src/main/java/com/example/nh_care/activity/alokasi/AlokasiActivity.kt	(date 1701145132495)
@@ -2,89 +2,111 @@
 
 import android.content.Intent
 import android.os.Bundle
+import android.util.Base64
+import android.util.Log
 import androidx.appcompat.app.AppCompatActivity
 import androidx.appcompat.widget.SearchView
+import androidx.fragment.app.FragmentManager
+import androidx.fragment.app.FragmentTransaction
 import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.android.volley.Request
+import com.android.volley.toolbox.JsonArrayRequest
+import com.android.volley.toolbox.Volley
 import com.example.berandaberanda.activitity.alokasi.AlokasiAdapter
-import com.example.berandaberanda.activitity.alokasi.DataItem
-import com.example.nh_care.activity.MainActivity
 import com.example.nh_care.R
 import com.example.nh_care.ui.beranda.BerandaFragment
 import com.example.nh_care.databinding.ActivityAlokasiBinding
+import org.json.JSONArray
+import org.json.JSONException
 
 class AlokasiActivity : AppCompatActivity() {
-
     private lateinit var binding: ActivityAlokasiBinding
-    private lateinit var mList: ArrayList<DataItem>
-    private lateinit var searchView: SearchView
+    private lateinit var recyclerView: RecyclerView
+    private var alokasiAdapter: AlokasiAdapter? = null
+    private val alokasiList = ArrayList<Map<String, String>>() // Using Map<String, String> as per the adapter
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         binding = ActivityAlokasiBinding.inflate(layoutInflater)
         setContentView(binding.root)
-        supportActionBar?.hide()
 
-        binding.recyclerView.setHasFixedSize(true)
-        binding.recyclerView.layoutManager = LinearLayoutManager(this)
+        alokasiAdapter = AlokasiAdapter(alokasiList)
+        recyclerView = binding.recyclerView
 
-        mList = ArrayList()
-        prepareData()
+        recyclerView.layoutManager = LinearLayoutManager(this)
+        recyclerView.adapter = alokasiAdapter
 
-        val adapter = AlokasiAdapter(mList)
-        binding.recyclerView.adapter = adapter
+        // Set listener to handle item clicks
+        alokasiAdapter?.setOnItemClickListener(object : AlokasiAdapter.OnItemClickListener {
+            override fun onItemClick(position: Int) {
+                val intent = Intent(this@AlokasiActivity, DetailAlokasiActivity::class.java)
+                val currentItem = alokasiList[position]
+                intent.putExtra("judul", currentItem["judul"])
+                intent.putExtra("deskripsi", currentItem["deskripsi"])
+                val imageBase64 = currentItem["image"]
+                if (!imageBase64.isNullOrBlank()) {
+                    val imageBytes = Base64.decode(imageBase64, Base64.DEFAULT)
+                    intent.putExtra("img_alokasi", imageBytes)
+                }
+                startActivity(intent)
+            }
+        })
 
+        binding.backalokasi.setOnClickListener {
+            val fragmentManager: FragmentManager = supportFragmentManager
+            val fragmentTransaction: FragmentTransaction = fragmentManager.beginTransaction()
+            val berandaFragment = BerandaFragment()
+            fragmentTransaction.replace(R.id.frame_layout, berandaFragment)
+            fragmentTransaction.commit()
+        }
 
+        // Call the method to fetch data from the local API
+        fetchAlokasiDataFromAPI()
     }
 
-    private fun prepareData() {
+    private fun fetchAlokasiDataFromAPI() {
+        val urlDataAlokasi = "http://10.10.182.37/api-mysql-main/api-alokasiDana.php"
 
-        mList.add(
-            DataItem(
-                "Pembangunan dan Fasilitas",
-                "Alokasi dana untuk pembangunan fasilitas panti asuhan adalah upaya menyediakan dana guna membangun atau meningkatkan infrastruktur panti asuhan. Dana ini digunakan untuk memperbaiki, membangun, atau memperluas fasilitas seperti ruang tidur, kamar mandi, ruang belajar, dan area rekreasi. Sasaran alokasi dana ini adalah menciptakan lingkungan yang nyaman dan aman bagi anak-anak di panti asuhan, memastikan mereka memiliki tempat yang layak untuk tinggal dan belajar.",
-                R.drawable.beranda,
-                null
-            )
-        )
-        mList.add(
-            DataItem(
-                "Santunan Anak Yatim dan Piatu",
-                "Alokasi dana untuk santunan anak yatim piatu berfokus pada memberikan dukungan finansial langsung kepada anak-anak yang tinggal di panti asuhan. Dana ini digunakan untuk memenuhi kebutuhan dasar seperti pendidikan, pangan, pakaian, dan kebutuhan keseharian lainnya. Sasaran alokasi dana ini adalah memberikan bantuan praktis dan nyata kepada anak-anak yatim piatu, memastikan bahwa mereka mendapatkan dukungan untuk menghadapi kehidupan sehari-hari dan memiliki akses ke fasilitas yang mendukung perkembangan mereka secara holistik.",
-                R.drawable.beranda,
-                null
-            )
-        )
+        val jsonArrayRequest = JsonArrayRequest(
+            Request.Method.GET, urlDataAlokasi, null,
+            { response ->
+                try {
+                    val fetchedAlokasiList = parseAlokasi(response)
+                    alokasiList.clear()
+                    alokasiList.addAll(fetchedAlokasiList)
+                    alokasiAdapter?.setAlokasi(alokasiList)
+                } catch (e: JSONException) {
+                    Log.e("JSON_ERROR", "Error: " + e.message)
+                    e.printStackTrace()
+                }
+            },
+            { error ->
+                Log.e("VOLLEY_ERROR", "Error: " + error.message)
+                error.printStackTrace()
+            })
+
+        Volley.newRequestQueue(this).add(jsonArrayRequest)
+    }
 
-        mList.add(
-            DataItem(
-                "Coming Soon",
-                null,
-                null,
-                R.drawable.comingsoon
-            )
-        )
+    private fun parseAlokasi(jsonArray: JSONArray): List<Map<String, String>> {
+        val alokasik = mutableListOf<Map<String, String>>()
 
-        mList.add(
-            DataItem(
-                "Coming Soon",
-                null,
-                null,
-                R.drawable.comingsoon
-            )
-        )
+        for (i in 0 until jsonArray.length()) {
+            val alokasiObject = jsonArray.getJSONObject(i)
 
+            val judul = alokasiObject.getString("judul")
+            val deskripsi = alokasiObject.getString("deskripsi")
+            val imageAlokasiBase64 = alokasiObject.getString("img_alokasi")
 
-        mList.add(
-            DataItem(
-                "Administrator",
-                null,
-                null,
-                null
+            val alokasi = mapOf(
+                "judul" to judul,
+                "deskripsi" to deskripsi,
+                "image" to imageAlokasiBase64
             )
-        )
-
-        binding.backalokasi.setOnClickListener() {
-            startActivity(Intent(this, MainActivity::class.java))
+            alokasik.add(alokasi)
         }
+
+        return alokasik
     }
 }
Index: app/src/main/java/com/example/nh_care/activity/alokasi/AlokasiAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.berandaberanda.activitity.alokasi\r\n\r\nimport android.view.LayoutInflater\r\nimport android.view.ViewGroup\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.example.nh_care.databinding.ItemAlokasiGambarBinding\r\nimport com.example.nh_care.databinding.ItemAlokasiListBinding\r\n\r\n\r\nconst val ITEM_ALOKASI_GAMBAR = 0\r\nconst val ITEM_ALOKASI_LIST = 1\r\n\r\nclass AlokasiAdapter(private val mList: List<DataItem>) :\r\n    RecyclerView.Adapter<RecyclerView.ViewHolder>() {\r\n\r\n\r\n    inner class ItemAlokasiGambarViewHolder(private val binding: ItemAlokasiGambarBinding) :\r\n        RecyclerView.ViewHolder(binding.root) {\r\n\r\n        fun bindPosterView(dataItem: DataItem) {\r\n            dataItem.poster?.let { binding.posterIv.setImageResource(it) }\r\n            binding.movieTitleTv.text = dataItem.title\r\n            binding.movieDescTv.text = dataItem.desc\r\n        }\r\n    }\r\n\r\n    inner class ItemAlokasiListViewHolder(private val binding: ItemAlokasiListBinding) :\r\n        RecyclerView.ViewHolder(binding.root) {\r\n\r\n        fun bindWithoutPosterView(dataItem: DataItem) {\r\n            binding.movieTitleTv.text = dataItem.title\r\n            dataItem.logo?.let { binding.logoIv.setImageResource(dataItem.logo) }\r\n        }\r\n    }\r\n\r\n    override fun getItemViewType(position: Int): Int {\r\n\r\n        if (mList[position].poster != null) {\r\n            return ITEM_ALOKASI_GAMBAR\r\n        } else {\r\n            return ITEM_ALOKASI_LIST\r\n        }\r\n    }\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {\r\n\r\n        if (viewType == ITEM_ALOKASI_GAMBAR) {\r\n            val binding =\r\n                ItemAlokasiGambarBinding.inflate(LayoutInflater.from(parent.context), parent, false)\r\n            return ItemAlokasiGambarViewHolder(binding)\r\n\r\n        } else {\r\n            val binding =\r\n                ItemAlokasiListBinding.inflate(LayoutInflater.from(parent.context), parent, false)\r\n            return ItemAlokasiListViewHolder(binding)\r\n        }\r\n\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n        return mList.size\r\n    }\r\n\r\n    override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {\r\n\r\n        if (getItemViewType(position) == ITEM_ALOKASI_GAMBAR) {\r\n            (holder as ItemAlokasiGambarViewHolder).bindPosterView(mList[position])\r\n        } else {\r\n            (holder as ItemAlokasiListViewHolder).bindWithoutPosterView(mList[position])\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/nh_care/activity/alokasi/AlokasiAdapter.kt b/app/src/main/java/com/example/nh_care/activity/alokasi/AlokasiAdapter.kt
--- a/app/src/main/java/com/example/nh_care/activity/alokasi/AlokasiAdapter.kt	(revision 4ecb235596b5e6087dcc01df36193f51e0cb4f30)
+++ b/app/src/main/java/com/example/nh_care/activity/alokasi/AlokasiAdapter.kt	(date 1701145132495)
@@ -1,72 +1,76 @@
 package com.example.berandaberanda.activitity.alokasi
 
+import android.graphics.BitmapFactory
+import android.util.Base64
 import android.view.LayoutInflater
 import android.view.ViewGroup
+import android.widget.ImageView
+import android.widget.TextView
 import androidx.recyclerview.widget.RecyclerView
+import com.example.nh_care.R
 import com.example.nh_care.databinding.ItemAlokasiGambarBinding
 import com.example.nh_care.databinding.ItemAlokasiListBinding
 
 
-const val ITEM_ALOKASI_GAMBAR = 0
-const val ITEM_ALOKASI_LIST = 1
+class AlokasiAdapter(private var alokasiList: List<Map<String, String>>) :
+    RecyclerView.Adapter<AlokasiAdapter.AlokasiViewHolder>() {
 
-class AlokasiAdapter(private val mList: List<DataItem>) :
-    RecyclerView.Adapter<RecyclerView.ViewHolder>() {
+    private var listener: OnItemClickListener? = null
 
+    interface OnItemClickListener {
+        fun onItemClick(position: Int)
+    }
 
-    inner class ItemAlokasiGambarViewHolder(private val binding: ItemAlokasiGambarBinding) :
-        RecyclerView.ViewHolder(binding.root) {
+    fun setOnItemClickListener(listener: OnItemClickListener) {
+        this.listener = listener
+    }
 
-        fun bindPosterView(dataItem: DataItem) {
-            dataItem.poster?.let { binding.posterIv.setImageResource(it) }
-            binding.movieTitleTv.text = dataItem.title
-            binding.movieDescTv.text = dataItem.desc
-        }
+    fun setAlokasi(Alokasi: List<Map<String, String>>) {
+        alokasiList = Alokasi
+        notifyDataSetChanged()
     }
 
-    inner class ItemAlokasiListViewHolder(private val binding: ItemAlokasiListBinding) :
+    inner class AlokasiViewHolder(private val binding: ActivityItemBinding) :
         RecyclerView.ViewHolder(binding.root) {
 
-        fun bindWithoutPosterView(dataItem: DataItem) {
-            binding.movieTitleTv.text = dataItem.title
-            dataItem.logo?.let { binding.logoIv.setImageResource(dataItem.logo) }
-        }
-    }
+        init {
+            binding.root.setOnClickListener {
+                val position = adapterPosition
+                if (position != RecyclerView.NO_POSITION) {
+                    listener?.onItemClick(position)
+                }
+            }
+        }
 
-    override fun getItemViewType(position: Int): Int {
+        fun bind(alokasi: Map<String, String>) {
+            val textView: TextView = binding.itemName
+            val imageView: ImageView = binding.itemAvatar
 
-        if (mList[position].poster != null) {
-            return ITEM_ALOKASI_GAMBAR
-        } else {
-            return ITEM_ALOKASI_LIST
-        }
-    }
-
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {
-
-        if (viewType == ITEM_ALOKASI_GAMBAR) {
-            val binding =
-                ItemAlokasiGambarBinding.inflate(LayoutInflater.from(parent.context), parent, false)
-            return ItemAlokasiGambarViewHolder(binding)
-
-        } else {
-            val binding =
-                ItemAlokasiListBinding.inflate(LayoutInflater.from(parent.context), parent, false)
-            return ItemAlokasiListViewHolder(binding)
-        }
+            // Set the text from MapelModel to the TextView
+            textView.text = alokasi["judul"]
+
+            // Load the image using Picasso into the ImageView if the path is not empty
+            val imageBase64 = alokasi["image"]
+            if (!imageBase64.isNullOrBlank()) {
+                val imageBytes = Base64.decode(imageBase64, Base64.DEFAULT)
+                val decodedImage = BitmapFactory.decodeByteArray(imageBytes, 0, imageBytes.size)
+                imageView.setImageBitmap(decodedImage)
+            } else {
+                // Handle the case where the base64-encoded string is empty or null, for example, set a placeholder image
+                imageView.setImageResource(R.drawable.img)
+            }
+        }
+    }
 
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): AlokasiViewHolder {
+        val binding = ActivityItemBinding.inflate(LayoutInflater.from(parent.context), parent, false)
+        return AlokasiViewHolder(binding)
     }
 
-    override fun getItemCount(): Int {
-        return mList.size
+    override fun onBindViewHolder(holder: AlokasiViewHolder, position: Int) {
+        val currentItem = alokasiList[position]
+        holder.bind(currentItem)
     }
 
-    override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {
-
-        if (getItemViewType(position) == ITEM_ALOKASI_GAMBAR) {
-            (holder as ItemAlokasiGambarViewHolder).bindPosterView(mList[position])
-        } else {
-            (holder as ItemAlokasiListViewHolder).bindWithoutPosterView(mList[position])
-        }
-    }
-}
\ No newline at end of file
+    override fun getItemCount() = alokasiList.size
+}
Index: app/src/main/java/com/example/nh_care/activity/alokasi/DataItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/nh_care/activity/alokasi/DataItem.kt b/app/src/main/java/com/example/nh_care/activity/alokasi/DataAlokasi.kt
rename from app/src/main/java/com/example/nh_care/activity/alokasi/DataItem.kt
rename to app/src/main/java/com/example/nh_care/activity/alokasi/DataAlokasi.kt
--- a/app/src/main/java/com/example/nh_care/activity/alokasi/DataItem.kt	(revision 4ecb235596b5e6087dcc01df36193f51e0cb4f30)
+++ b/app/src/main/java/com/example/nh_care/activity/alokasi/DataAlokasi.kt	(date 1701145132510)
@@ -1,22 +1,10 @@
 package com.example.berandaberanda.activitity.alokasi
 
+import android.graphics.Bitmap
 
-data class DataItem(
-    val title : String,
-    val desc : String?,
-    val poster : Int?,
-    val logo : Int?
-)
-sealed class DataItemTypes {
-    data class ResponseOne(
-        val title: String,
-        val desc: String?,
-        val poster: Int?,
-    ) : DataItemTypes()
 
-    data class ResponseTwo(
-        val title : String,
-        val desc : String?,
-        val poster : Int?,
-        ): DataItemTypes()
-}
\ No newline at end of file
+data class DataAlokasi(
+    val Judul: String,
+    val Deskripsi: String,
+    val img_alokasi: Bitmap
+)
